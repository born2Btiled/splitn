from splitn import split

SEQUENCE = '00112233'
PATTERN = (1, 2, 4)
SEPARATOR = '-'
OUTPUT = (
    '00112233',
    '0 0112233',
    '00 112233',
    '001 12233',
    '0011 2233',
    '00112 233',
    '001122 33',
    '0011223 3',
    '0 0 112233',
    '0 01 12233',
    '0 011 2233',
    '0 0112 233',
    '0 01122 33',
    '0 011223 3',
    '00 1 12233',
    '00 11 2233',
    '00 112 233',
    '00 1122 33',
    '00 11223 3',
    '001 1 2233',
    '001 12 233',
    '001 122 33',
    '001 1223 3',
    '0011 2 233',
    '0011 22 33',
    '0011 223 3',
    '00112 2 33',
    '00112 23 3',
    '001122 3 3',
    '0 0 1 12233',
    '0 0 11 2233',
    '0 0 112 233',
    '0 0 1122 33',
    '0 0 11223 3',
    '0 01 1 2233',
    '0 01 12 233',
    '0 01 122 33',
    '0 01 1223 3',
    '0 011 2 233',
    '0 011 22 33',
    '0 011 223 3',
    '0 0112 2 33',
    '0 0112 23 3',
    '0 01122 3 3',
    '00 1 1 2233',
    '00 1 12 233',
    '00 1 122 33',
    '00 1 1223 3',
    '00 11 2 233',
    '00 11 22 33',
    '00 11 223 3',
    '00 112 2 33',
    '00 112 23 3',
    '00 1122 3 3',
    '001 1 2 233',
    '001 1 22 33',
    '001 1 223 3',
    '001 12 2 33',
    '001 12 23 3',
    '001 122 3 3',
    '0011 2 2 33',
    '0011 2 23 3',
    '0011 22 3 3',
    '00112 2 3 3',
    '0 0 1 1 2233',
    '0 0 1 12 233',
    '0 0 1 122 33',
    '0 0 1 1223 3',
    '0 0 11 2 233',
    '0 0 11 22 33',
    '0 0 11 223 3',
    '0 0 112 2 33',
    '0 0 112 23 3',
    '0 0 1122 3 3',
    '0 01 1 2 233',
    '0 01 1 22 33',
    '0 01 1 223 3',
    '0 01 12 2 33',
    '0 01 12 23 3',
    '0 01 122 3 3',
    '0 011 2 2 33',
    '0 011 2 23 3',
    '0 011 22 3 3',
    '0 0112 2 3 3',
    '00 1 1 2 233',
    '00 1 1 22 33',
    '00 1 1 223 3',
    '00 1 12 2 33',
    '00 1 12 23 3',
    '00 1 122 3 3',
    '00 11 2 2 33',
    '00 11 2 23 3',
    '00 11 22 3 3',
    '00 112 2 3 3',
    '001 1 2 2 33',
    '001 1 2 23 3',
    '001 1 22 3 3',
    '001 12 2 3 3',
    '0011 2 2 3 3',
    '0 0 1 1 2 233',
    '0 0 1 1 22 33',
    '0 0 1 1 223 3',
    '0 0 1 12 2 33',
    '0 0 1 12 23 3',
    '0 0 1 122 3 3',
    '0 0 11 2 2 33',
    '0 0 11 2 23 3',
    '0 0 11 22 3 3',
    '0 0 112 2 3 3',
    '0 01 1 2 2 33',
    '0 01 1 2 23 3',
    '0 01 1 22 3 3',
    '0 01 12 2 3 3',
    '0 011 2 2 3 3',
    '00 1 1 2 2 33',
    '00 1 1 2 23 3',
    '00 1 1 22 3 3',
    '00 1 12 2 3 3',
    '00 11 2 2 3 3',
    '001 1 2 2 3 3',
    '0 0 1 1 2 2 33',
    '0 0 1 1 2 23 3',
    '0 0 1 1 22 3 3',
    '0 0 1 12 2 3 3',
    '0 0 11 2 2 3 3',
    '0 01 1 2 2 3 3',
    '00 1 1 2 2 3 3',
    '0 0 1 1 2 2 3 3'
)

PATTERNS = (
    (),
    (0,),
    (1,),
    (0,1)
)

def test_split_return_type():
    assert isinstance(split.split(SEQUENCE, PATTERN, SEPARATOR), str)

def test_split():
    assert split.split(SEQUENCE, PATTERN, SEPARATOR) == '00-1-12-233'

def test_patterns():
    for produced, expected in zip(split.patterns(3), PATTERNS):
        assert produced == expected

def test_splitted():
    for produced, expected in zip(split.splitted(SEQUENCE), OUTPUT):
        assert produced == expected
